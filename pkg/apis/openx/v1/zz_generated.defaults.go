//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by defaulter-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&Etcd{}, func(obj interface{}) { SetObjectDefaults_Etcd(obj.(*Etcd)) })
	scheme.AddTypeDefaultingFunc(&EtcdList{}, func(obj interface{}) { SetObjectDefaults_EtcdList(obj.(*EtcdList)) })
	scheme.AddTypeDefaultingFunc(&Mysql{}, func(obj interface{}) { SetObjectDefaults_Mysql(obj.(*Mysql)) })
	scheme.AddTypeDefaultingFunc(&MysqlList{}, func(obj interface{}) { SetObjectDefaults_MysqlList(obj.(*MysqlList)) })
	scheme.AddTypeDefaultingFunc(&Openx{}, func(obj interface{}) { SetObjectDefaults_Openx(obj.(*Openx)) })
	scheme.AddTypeDefaultingFunc(&OpenxList{}, func(obj interface{}) { SetObjectDefaults_OpenxList(obj.(*OpenxList)) })
	scheme.AddTypeDefaultingFunc(&Redis{}, func(obj interface{}) { SetObjectDefaults_Redis(obj.(*Redis)) })
	scheme.AddTypeDefaultingFunc(&RedisList{}, func(obj interface{}) { SetObjectDefaults_RedisList(obj.(*RedisList)) })
	return nil
}

func SetObjectDefaults_Etcd(in *Etcd) {
	if in.Spec.Pod != nil {
		for i := range in.Spec.Pod.Spec.InitContainers {
			a := &in.Spec.Pod.Spec.InitContainers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Pod.Spec.Containers {
			a := &in.Spec.Pod.Spec.Containers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Pod.Spec.EphemeralContainers {
			a := &in.Spec.Pod.Spec.EphemeralContainers[i]
			for j := range a.EphemeralContainerCommon.Ports {
				b := &a.EphemeralContainerCommon.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.EphemeralContainerCommon.LivenessProbe != nil {
				if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.ReadinessProbe != nil {
				if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.StartupProbe != nil {
				if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
	}
}

func SetObjectDefaults_EtcdList(in *EtcdList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Etcd(a)
	}
}

func SetObjectDefaults_Mysql(in *Mysql) {
	if in.Spec.Master.Pod != nil {
		for i := range in.Spec.Master.Pod.Spec.InitContainers {
			a := &in.Spec.Master.Pod.Spec.InitContainers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Master.Pod.Spec.Containers {
			a := &in.Spec.Master.Pod.Spec.Containers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Master.Pod.Spec.EphemeralContainers {
			a := &in.Spec.Master.Pod.Spec.EphemeralContainers[i]
			for j := range a.EphemeralContainerCommon.Ports {
				b := &a.EphemeralContainerCommon.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.EphemeralContainerCommon.LivenessProbe != nil {
				if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.ReadinessProbe != nil {
				if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.StartupProbe != nil {
				if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
	}
	if in.Spec.Master.Service != nil {
		for i := range in.Spec.Master.Service.Spec.Ports {
			a := &in.Spec.Master.Service.Spec.Ports[i]
			if a.Protocol == "" {
				a.Protocol = "TCP"
			}
		}
	}
	if in.Spec.Slave.Pod != nil {
		for i := range in.Spec.Slave.Pod.Spec.InitContainers {
			a := &in.Spec.Slave.Pod.Spec.InitContainers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Slave.Pod.Spec.Containers {
			a := &in.Spec.Slave.Pod.Spec.Containers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Slave.Pod.Spec.EphemeralContainers {
			a := &in.Spec.Slave.Pod.Spec.EphemeralContainers[i]
			for j := range a.EphemeralContainerCommon.Ports {
				b := &a.EphemeralContainerCommon.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.EphemeralContainerCommon.LivenessProbe != nil {
				if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.ReadinessProbe != nil {
				if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.StartupProbe != nil {
				if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
	}
	if in.Spec.Slave.Service != nil {
		for i := range in.Spec.Slave.Service.Spec.Ports {
			a := &in.Spec.Slave.Service.Spec.Ports[i]
			if a.Protocol == "" {
				a.Protocol = "TCP"
			}
		}
	}
}

func SetObjectDefaults_MysqlList(in *MysqlList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Mysql(a)
	}
}

func SetObjectDefaults_Openx(in *Openx) {
	for i := range in.Spec.Applications {
		a := &in.Spec.Applications[i]
		if a.Pod != nil {
			for j := range a.Pod.Spec.InitContainers {
				b := &a.Pod.Spec.InitContainers[j]
				for k := range b.Ports {
					c := &b.Ports[k]
					if c.Protocol == "" {
						c.Protocol = "TCP"
					}
				}
				if b.LivenessProbe != nil {
					if b.LivenessProbe.ProbeHandler.GRPC != nil {
						if b.LivenessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.ReadinessProbe != nil {
					if b.ReadinessProbe.ProbeHandler.GRPC != nil {
						if b.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.StartupProbe != nil {
					if b.StartupProbe.ProbeHandler.GRPC != nil {
						if b.StartupProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
			}
			for j := range a.Pod.Spec.Containers {
				b := &a.Pod.Spec.Containers[j]
				for k := range b.Ports {
					c := &b.Ports[k]
					if c.Protocol == "" {
						c.Protocol = "TCP"
					}
				}
				if b.LivenessProbe != nil {
					if b.LivenessProbe.ProbeHandler.GRPC != nil {
						if b.LivenessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.ReadinessProbe != nil {
					if b.ReadinessProbe.ProbeHandler.GRPC != nil {
						if b.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.StartupProbe != nil {
					if b.StartupProbe.ProbeHandler.GRPC != nil {
						if b.StartupProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
			}
			for j := range a.Pod.Spec.EphemeralContainers {
				b := &a.Pod.Spec.EphemeralContainers[j]
				for k := range b.EphemeralContainerCommon.Ports {
					c := &b.EphemeralContainerCommon.Ports[k]
					if c.Protocol == "" {
						c.Protocol = "TCP"
					}
				}
				if b.EphemeralContainerCommon.LivenessProbe != nil {
					if b.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
						if b.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.EphemeralContainerCommon.ReadinessProbe != nil {
					if b.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
						if b.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
				if b.EphemeralContainerCommon.StartupProbe != nil {
					if b.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
						if b.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
							var ptrVar1 string = ""
							b.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
						}
					}
				}
			}
		}
		if a.Service != nil {
			for j := range a.Service.Spec.Ports {
				b := &a.Service.Spec.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
		}
		if a.ExtensionService != nil {
			for j := range a.ExtensionService.Spec.Ports {
				b := &a.ExtensionService.Spec.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
		}
	}
}

func SetObjectDefaults_OpenxList(in *OpenxList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Openx(a)
	}
}

func SetObjectDefaults_Redis(in *Redis) {
	if in.Spec.Master.Pod != nil {
		for i := range in.Spec.Master.Pod.Spec.InitContainers {
			a := &in.Spec.Master.Pod.Spec.InitContainers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Master.Pod.Spec.Containers {
			a := &in.Spec.Master.Pod.Spec.Containers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Master.Pod.Spec.EphemeralContainers {
			a := &in.Spec.Master.Pod.Spec.EphemeralContainers[i]
			for j := range a.EphemeralContainerCommon.Ports {
				b := &a.EphemeralContainerCommon.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.EphemeralContainerCommon.LivenessProbe != nil {
				if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.ReadinessProbe != nil {
				if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.StartupProbe != nil {
				if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
	}
	if in.Spec.Master.Service != nil {
		for i := range in.Spec.Master.Service.Spec.Ports {
			a := &in.Spec.Master.Service.Spec.Ports[i]
			if a.Protocol == "" {
				a.Protocol = "TCP"
			}
		}
	}
	if in.Spec.Slave.Pod != nil {
		for i := range in.Spec.Slave.Pod.Spec.InitContainers {
			a := &in.Spec.Slave.Pod.Spec.InitContainers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Slave.Pod.Spec.Containers {
			a := &in.Spec.Slave.Pod.Spec.Containers[i]
			for j := range a.Ports {
				b := &a.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.LivenessProbe != nil {
				if a.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.ReadinessProbe != nil {
				if a.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.StartupProbe != nil {
				if a.StartupProbe.ProbeHandler.GRPC != nil {
					if a.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
		for i := range in.Spec.Slave.Pod.Spec.EphemeralContainers {
			a := &in.Spec.Slave.Pod.Spec.EphemeralContainers[i]
			for j := range a.EphemeralContainerCommon.Ports {
				b := &a.EphemeralContainerCommon.Ports[j]
				if b.Protocol == "" {
					b.Protocol = "TCP"
				}
			}
			if a.EphemeralContainerCommon.LivenessProbe != nil {
				if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.LivenessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.ReadinessProbe != nil {
				if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.ReadinessProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
			if a.EphemeralContainerCommon.StartupProbe != nil {
				if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC != nil {
					if a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service == nil {
						var ptrVar1 string = ""
						a.EphemeralContainerCommon.StartupProbe.ProbeHandler.GRPC.Service = &ptrVar1
					}
				}
			}
		}
	}
	if in.Spec.Slave.Service != nil {
		for i := range in.Spec.Slave.Service.Spec.Ports {
			a := &in.Spec.Slave.Service.Spec.Ports[i]
			if a.Protocol == "" {
				a.Protocol = "TCP"
			}
		}
	}
}

func SetObjectDefaults_RedisList(in *RedisList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Redis(a)
	}
}
