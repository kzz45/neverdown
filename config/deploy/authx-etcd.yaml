apiVersion: v1
kind: Service
metadata:
  name: authx-etcd-headless
  namespace: test
spec:
  clusterIP: None
  ports:
  - name: client
    port: 2379
    protocol: TCP
    targetPort: 2379
  - name: peer
    port: 2380
    protocol: TCP
    targetPort: 2380
  selector:
    app: authx-etcd
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: authx-etcd
  namespace: test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: authx-etcd
  serviceName: authx-etcd-headless
  template:
    metadata:
      labels:
        app: authx-etcd
      name: authx-etcd
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "\nPEERS=\"authx-etcd-0=http://authx-etcd-0.authx-etcd-headless:2380,authx-etcd-1=http://etcd-1.authx-etcd-headless:2380,authx-etcd-2=http://etcd-2.authx-etcd-headless:2380\"\nexec etcd --name ${HOSTNAME} \\\n\t--listen-peer-urls http://0.0.0.0:2380 \\\n\t--listen-client-urls http://0.0.0.0:2379 \\\n\t--advertise-client-urls http://${HOSTNAME}.authx-etcd-headless:2379 \\\n\t--initial-advertise-peer-urls http://${HOSTNAME}.authx-etcd-headless:2380 \\\n\t--initial-cluster-token etcd-cluster-1 \\\n\t--initial-cluster ${PEERS} \\\n\t--initial-cluster-state new \\\n\t--data-dir /var/run/etcd/${HOSTNAME}.etcd \\\n\t--logger=zap\n"
        env:
        - name: GET_HOSTS_FROM
          value: dns
        image: bitnami/etcd:3.5.4
        imagePullPolicy: IfNotPresent
        name: authx-etcd
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        volumeMounts:
        - mountPath: /var/run/etcd
          name: task-pv-storage
          readOnly: false
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /authx/etcd-clusters/etcd
          type: DirectoryOrCreate
        name: task-pv-storage
